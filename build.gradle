plugins {
	id 'org.springframework.boot' version '2.4.0'
	id 'io.spring.dependency-management' version '1.0.10.RELEASE'
	id 'java'
//	id "org.openapi.generator" version "5.0.0-beta2"
}

group = 'com.example.petstore'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-actuator'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
}

test {
	useJUnitPlatform()
}
task generateServerApi(type: org.openapitools.generator.gradle.plugin.tasks.GenerateTask) {
	group = 'petstore-api-generator'
	description = 'generates server api for backend'

    generatorName = "spring"
    inputSpec = "/home/t/Code/Java/spring/openapi-specs/petstore_v1.0.5.yaml"
    outputDir = "$rootDir/petstore-api"
    apiPackage = "com.example.petstore.backend.api"
    invokerPackage = "com.example.petstore.backend.api.invoker"
    modelPackage = "com.example.petstore.backend.api.model"
    configOptions = [
        configPackage: "com.example.petstore.backend.api.configuration",
        dateLibrary: "java8",
        interfaceOnly: "true"
    ]
}

//compileJava.dependsOn(generateServerApi)

dependencies {
	implementation 'org.springdoc:springdoc-openapi-ui:1.2.32'
	implementation project(':petstore-api')	
}

sourceSets {
    main {
        java {
            srcDir(files("${openApiGenerate.outputDir.get()}/src/main"))
        }
    }
}


